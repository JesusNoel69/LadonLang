using System.Xml.Schema;

namespace LadonLang
{
    public class Scanner
    {
        private static char[] _digits = ['0','1','2','3','4','5','6','7','8','9'];
        private static char[] _symbols = ['b', 'B', 'c', 'C', 'g', 'h', 'H', 'j', 'J', 'k', 'K', 'M', 'O', 'q', 'Q', 'T', 'v', 'V', 'w', 'X', 'Y', 'z', 'Z','_'];
        private static char[] _delimiters=['-', ';' , ' ', ',', '[', ']','(',')','#','=','+','%','&','/','|','*','!']; //---
        private static char[] _arithmeticOperators = ['+','-','*','/','%','=']; //"**, ++, --, +=, /=, *=, 
        private static string[] _relationalOperators = ["==","!=", "<","<=",">",">="];
        private static string[] _logicOperators = ["&&","||","!"];
        private static int col;
        private static int state;
        public static int[][] Matrix=[
            [0,1,3,1,1,6,1,1,9,33,11,1,13,1,1,1,1,1,1,1,27,1,1,1,1,36,1,40,43,1,1,1,50,53],
            [100,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [200,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [300,-1,3,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [1,-2,5,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2],
            [6,-2,5,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2],
            [1,1,1,-3,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [500,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [600,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [700,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,15,1,14,1,1,1,1,1,1,1,24,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [800,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [900,1,1,-3,1,1,1,1,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,20,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,22,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,23,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1000,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,25,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,26,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1100,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,28,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,29,1,1,1,1,31,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,30,1,1,1,1,1,1,1,1,1,1,1,1],
            [1200,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,32,1,1,1,1,1,1,1,1,1,1,1],
            [1300,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,35,1,1,1,1,1,1,1,1,1],
            [1400,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,37,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,38,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,39,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1500,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,42,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1600,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,44,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,45,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,46,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,47,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,48,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,49,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1700,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,51,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,52,1,1],
            [1800,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,54,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,55,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,56,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,1,-3,1,1,1,1,1,1,1,1,1,1,57,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1900,1,1,-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
        ];
        public static void Scan(string? input){
            col=0;
            state=0;
            for(int i=0; i<input.Length;i++){
                if(CharIn(_delimiters,input[i])){
                    col=0;
                }else if(CharIn(_symbols,input[i])){
                    col=1;
                }else if(CharIn(_digits,input[i])){
                    col=2;
                }else if(CharIn(['"'],input[i])){
                    col=3;
                }else if(CharIn(['.'],input[i])){
                    col=4;
                }else if(CharIn(['A'],input[i])){
                    col=5;
                }else if(CharIn(['n'],input[i])){
                    col=6;
                }else if(CharIn(['y'],input[i])){
                    col=7;
                }else if(CharIn(['F'],input[i])){
                    col=8;
                }else if(CharIn(['N'],input[i])){
                    col=9;
                }else if(CharIn(['G'],input[i])){
                    col=10;
                }else if(CharIn(['o'],input[i])){
                    col=11;
                }else if(CharIn(['I'],input[i])){
                    col=12;
                }else if(CharIn(['d'],input[i])){
                    col=13;
                }else if(CharIn(['e'],input[i])){
                    col=14;
                }else if(CharIn(['x'],input[i])){
                    col=15;
                }else if(CharIn(['t'],input[i])){
                    col=16;
                }else if(CharIn(['i'],input[i])){
                    col=17;
                }else if(CharIn(['r'],input[i])){
                    col=18;
                }else if(CharIn(['s'],input[i])){
                    col=19;
                }else if(CharIn(['L'],input[i])){
                    col=20;
                }else if(CharIn(['g'],input[i])){
                    col=21;
                }else if(CharIn(['p'],input[i])){
                    col=22;
                }else if(CharIn(['u'],input[i])){
                    col=23;
                }else if(CharIn(['m'],input[i])){
                    col=24;
                }else if(CharIn(['R'],input[i])){
                    col=25;
                }else if(CharIn(['a'],input[i])){
                    col=26;
                }else if(CharIn(['S'],input[i])){
                    col=27;
                }else if(CharIn(['D'],input[i])){
                    col=28;
                }else if(CharIn(['f'],input[i])){
                    col=29;
                }else if(CharIn(['u'],input[i])){
                    col=30;
                }else if(CharIn(['U'],input[i])){
                    col=31;
                }else if(CharIn(['W'],input[i])){
                    col=32;
                }
                state=Matrix[state][col];
                System.Console.WriteLine($"state{state} y col{col}");
            }
        }
        public static bool CharIn(char[] alphabet, char character){
            for(int j=0; j<alphabet.Length; j++){
                if(character == alphabet[j]){
                    return true;
                }
            }
            return false;
        } 
    }
}